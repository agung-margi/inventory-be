generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String    @id @default(uuid())
    nama      String    @db.VarChar(50)
    email     String    @unique @db.VarChar(50)
    phone     String    @db.VarChar(15)
    password  String    @db.VarChar(255)
    role      String    @default("user")
    kode_wh String? @db.VarChar(10)
    createdAt DateTime  @default(now()) @db.Timestamp(0)
    createdBy String    @default("system") @db.VarChar(36)
    updatedAt DateTime  @updatedAt @db.Timestamp(0)
    updatedBy String    @default("system") @db.VarChar(36)
    deletedAt DateTime? @db.Timestamp(0)
    deletedBy String?   @db.VarChar(36)

    kodeWh Warehouse? @relation(fields: [kode_wh], references: [kode_wh])
    Transaksi Transaksi[] @relation("petugas")
}

model Warehouse {
    id        String    @id @default(uuid())
    kode_wh   String    @unique @db.VarChar(10)
    nama_wh   String    @db.VarChar(50)
    alamat    String    @db.VarChar(150)
    createdAt DateTime  @default(now()) @db.Timestamp(0)
    createdBy String    @default("system") @db.VarChar(36)
    updatedAt DateTime  @updatedAt @db.Timestamp(0)
    updatedBy String    @default("system") @db.VarChar(36)
    deletedAt DateTime? @db.Timestamp(0)
    deletedBy String?   @db.VarChar(36)

    // relasi
    user User[]
    transaksiDetail TransaksiDetail[]
    kodeWhStock Stock[]


    transaksiFrom     Transaksi[] @relation("FromWarehouse")
    transaksiTo       Transaksi[] @relation("ToWarehouse")
}

model Item {
    id         String    @id @default(uuid())
    designator String    @unique @db.VarChar(50)
    nama_item  String    @unique @db.VarChar(50)
    kategori   String    @db.VarChar(20)
    harga      Float
    createdAt  DateTime  @default(now()) @db.Timestamp(0)
    createdBy  String    @default("system") @db.VarChar(36)
    updatedAt  DateTime  @updatedAt @db.Timestamp(0)
    updatedBy  String    @default("system") @db.VarChar(36)
    deletedAt  DateTime? @db.Timestamp(0)
    deletedBy  String?   @db.VarChar(36)

    transaksiDetail TransaksiDetail[]
    itemStock Stock[]

}

model Transaksi {
    id             Int       @id @default(autoincrement())
    tanggal        DateTime  @default(now()) @db.Timestamp(0)
    from_wh        String    @db.VarChar(10)
    to_wh          String?   @db.VarChar(50)
    to_user        String?   @db.VarChar(50)
    tipe_transaksi Int       @default(0)
    status         String?   @db.VarChar(10)
    petugas       String    @db.VarChar(255)
    penerima       String?    @db.VarChar(50)
    confirmAt      DateTime? @db.Timestamp(0)
    confirmBy      String?   @db.VarChar(36)
    createdAt      DateTime  @default(now()) @db.Timestamp(0)
    createdBy      String    @default("system") @db.VarChar(36)
    updatedAt      DateTime? @updatedAt @db.Timestamp(0)
    updatedBy      String?   @default("system") @db.VarChar(36)
    deletedAt      DateTime? @db.Timestamp(0)
    deletedBy      String?   @db.VarChar(36)

    TransaksiDetail TransaksiDetail[]

    fromWh Warehouse @relation("FromWarehouse", fields: [from_wh], references: [kode_wh])
    toWh   Warehouse? @relation("ToWarehouse", fields: [to_wh], references: [kode_wh])

    petugasWh User @relation("petugas", fields: [petugas], references: [id])
}

model TransaksiDetail {
    id              String    @id @default(uuid())
    id_transaksi    Int 
    tanggal         DateTime  @default(now()) @db.Timestamp(0)
    kode_wh         String    @db.VarChar(10)
    jenis_transaksi String    @db.VarChar(10)
    designator      String    @db.VarChar(50)
    qty             Int       @default(0)
    createdAt       DateTime  @default(now()) @db.Timestamp(0)
    createdBy       String    @default("system") @db.VarChar(36)
    updatedAt       DateTime? @updatedAt @db.Timestamp(0)
    updatedBy       String?   @db.VarChar(36)
    deletedAt       DateTime? @db.Timestamp(0)
    deletedBy       String?   @db.VarChar(36)

    // relasi
    transaksiItem Item @relation(fields: [designator], references: [designator])
    transaksiWh Warehouse @relation(fields: [kode_wh], references: [kode_wh])
    transaksiDetail Transaksi @relation(fields: [id_transaksi], references: [id])
}

model Stock {
    id         String    @id @default(uuid())
    kode_wh    String    @db.VarChar(10)
    designator String    @db.VarChar(50)
    available  Int       @default(0)
    transit    Int       @default(0)
    createdAt  DateTime  @default(now()) @db.Timestamp(0)
    createdBy  String    @default("system") @db.VarChar(36)
    updatedAt  DateTime? @updatedAt @db.Timestamp(0)
    updatedBy  String?   @db.VarChar(36)
    deletedAt  DateTime? @db.Timestamp(0)
    deletedBy  String?   @db.VarChar(36)

    itemStock Item @relation(fields: [designator], references: [designator])
    kodeWhStock Warehouse @relation(fields: [kode_wh], references: [kode_wh])
}
